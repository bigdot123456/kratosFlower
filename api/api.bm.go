// Code generated by protoc-gen-bm v0.1, DO NOT EDIT.
// source: api.proto

/*
Package api is a generated blademaster stub package.
This code was generated with kratos/tool/protobuf/protoc-gen-bm v0.1.

package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..

It is generated from these files:
	api.proto
*/
package api

import (
	"context"

	bm "github.com/bilibili/kratos/pkg/net/http/blademaster"
	"github.com/bilibili/kratos/pkg/net/http/blademaster/binding"
)
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

// to suppressed 'imported but not used warning'
var _ *bm.Context
var _ context.Context
var _ binding.StructValidator

var PathSvrflowerSvrPing = "/SvrflowerSvr.service.v1.SvrflowerSvr/Ping"
var PathSvrflowerSvrSayHello = "/SvrflowerSvr.service.v1.SvrflowerSvr/SayHello"
var PathSvrflowerSvrSayHelloURL = "/kratos-SvrflowerSvr/say_hello"

// SvrflowerSvrBMServer is the server API for SvrflowerSvr service.
type SvrflowerSvrBMServer interface {
	Ping(ctx context.Context, req *google_protobuf1.Empty) (resp *google_protobuf1.Empty, err error)

	SayHello(ctx context.Context, req *HelloReq) (resp *google_protobuf1.Empty, err error)

	SayHelloURL(ctx context.Context, req *HelloReq) (resp *HelloResp, err error)
}

var SvrflowerSvrSvc SvrflowerSvrBMServer

func svrflowerSvrPing(c *bm.Context) {
	p := new(google_protobuf1.Empty)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := SvrflowerSvrSvc.Ping(c, p)
	c.JSON(resp, err)
}

func svrflowerSvrSayHello(c *bm.Context) {
	p := new(HelloReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := SvrflowerSvrSvc.SayHello(c, p)
	c.JSON(resp, err)
}

func svrflowerSvrSayHelloURL(c *bm.Context) {
	p := new(HelloReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := SvrflowerSvrSvc.SayHelloURL(c, p)
	c.JSON(resp, err)
}

// RegisterSvrflowerSvrBMServer Register the blademaster route
func RegisterSvrflowerSvrBMServer(e *bm.Engine, server SvrflowerSvrBMServer) {
	SvrflowerSvrSvc = server
	e.GET("/SvrflowerSvr.service.v1.SvrflowerSvr/Ping", svrflowerSvrPing)
	e.GET("/SvrflowerSvr.service.v1.SvrflowerSvr/SayHello", svrflowerSvrSayHello)
	e.GET("/kratos-SvrflowerSvr/say_hello", svrflowerSvrSayHelloURL)
}
